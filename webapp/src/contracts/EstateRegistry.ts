/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface EstateRegistryInterface extends utils.Interface {
  functions: {
    "supportsInterface(bytes4)": FunctionFragment;
    "name()": FunctionFragment;
    "initialize(string,string,address)": FunctionFragment;
    "initialize(string,string)": FunctionFragment;
    "initialize()": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "updateManager(address,address)": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "landIdEstate(uint256)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "getFingerprint(uint256)": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "setLandUpdateOperator(uint256,uint256,address)": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "updateLandData(uint256,uint256,string)": FunctionFragment;
    "tokenOfOwnerByIndex(address,uint256)": FunctionFragment;
    "estateLandIds(uint256,uint256)": FunctionFragment;
    "setManyLandUpdateOperator(uint256,uint256[],address)": FunctionFragment;
    "transferManyLands(uint256,uint256[],address)": FunctionFragment;
    "updateManyLandData(uint256,uint256[],string)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "safeTransferFrom(address,address,uint256,bytes)": FunctionFragment;
    "exists(uint256)": FunctionFragment;
    "tokenByIndex(uint256)": FunctionFragment;
    "setLANDRegistry(address)": FunctionFragment;
    "updateMetadata(uint256,string)": FunctionFragment;
    "ping()": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "isUpdateAuthorized(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "setManyUpdateOperator(uint256[],address)": FunctionFragment;
    "safeTransferManyFrom(address,address,uint256[])": FunctionFragment;
    "safeTransferManyFrom(address,address,uint256[],bytes)": FunctionFragment;
    "registry()": FunctionFragment;
    "owner()": FunctionFragment;
    "verifyFingerprint(uint256,bytes)": FunctionFragment;
    "symbol()": FunctionFragment;
    "updateOperator(uint256)": FunctionFragment;
    "estateLandIndex(uint256,uint256)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "transferLand(uint256,uint256,address)": FunctionFragment;
    "getMetadata(uint256)": FunctionFragment;
    "setUpdateOperator(uint256,address)": FunctionFragment;
    "getLandEstateId(uint256)": FunctionFragment;
    "isMigrated(string,string)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "mint(address,string)": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "setUpdateManager(address,address,bool)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "getEstateSize(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "supportsInterface"
      | "name"
      | "initialize(string,string,address)"
      | "initialize(string,string)"
      | "initialize()"
      | "initialize(address)"
      | "updateManager"
      | "getApproved"
      | "approve"
      | "landIdEstate"
      | "onERC721Received"
      | "getFingerprint"
      | "totalSupply"
      | "setLandUpdateOperator"
      | "transferFrom"
      | "updateLandData"
      | "tokenOfOwnerByIndex"
      | "estateLandIds"
      | "setManyLandUpdateOperator"
      | "transferManyLands"
      | "updateManyLandData"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "exists"
      | "tokenByIndex"
      | "setLANDRegistry"
      | "updateMetadata"
      | "ping"
      | "ownerOf"
      | "isUpdateAuthorized"
      | "balanceOf"
      | "setManyUpdateOperator"
      | "safeTransferManyFrom(address,address,uint256[])"
      | "safeTransferManyFrom(address,address,uint256[],bytes)"
      | "registry"
      | "owner"
      | "verifyFingerprint"
      | "symbol"
      | "updateOperator"
      | "estateLandIndex"
      | "setApprovalForAll"
      | "transferLand"
      | "getMetadata"
      | "setUpdateOperator"
      | "getLandEstateId"
      | "isMigrated"
      | "tokenURI"
      | "mint"
      | "isApprovedForAll"
      | "setUpdateManager"
      | "transferOwnership"
      | "getEstateSize"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize(string,string,address)",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize(string,string)",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize(address)",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateManager",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "landIdEstate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFingerprint",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setLandUpdateOperator",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateLandData",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "estateLandIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setManyLandUpdateOperator",
    values: [BigNumberish, BigNumberish[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferManyLands",
    values: [BigNumberish, BigNumberish[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateManyLandData",
    values: [BigNumberish, BigNumberish[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "exists",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setLANDRegistry",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateMetadata",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "ping", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isUpdateAuthorized",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setManyUpdateOperator",
    values: [BigNumberish[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferManyFrom(address,address,uint256[])",
    values: [string, string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferManyFrom(address,address,uint256[],bytes)",
    values: [string, string, BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "verifyFingerprint",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateOperator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "estateLandIndex",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "transferLand",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMetadata",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setUpdateOperator",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getLandEstateId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isMigrated",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setUpdateManager",
    values: [string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getEstateSize",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initialize(string,string,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialize(string,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialize()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialize(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "landIdEstate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFingerprint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLandUpdateOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateLandData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "estateLandIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setManyLandUpdateOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferManyLands",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateManyLandData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "exists", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLANDRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ping", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isUpdateAuthorized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setManyUpdateOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferManyFrom(address,address,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferManyFrom(address,address,uint256[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "verifyFingerprint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "estateLandIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferLand",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUpdateOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLandEstateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isMigrated", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUpdateManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEstateSize",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
    "Approval(address,address,uint256)": EventFragment;
    "ApprovalForAll(address,address,bool)": EventFragment;
    "CreateEstate(address,uint256,string)": EventFragment;
    "AddLand(uint256,uint256)": EventFragment;
    "RemoveLand(uint256,uint256,address)": EventFragment;
    "Update(uint256,address,address,string)": EventFragment;
    "UpdateOperator(uint256,address)": EventFragment;
    "UpdateManager(address,address,address,bool)": EventFragment;
    "SetLANDRegistry(address)": EventFragment;
    "Migrated(string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CreateEstate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLand"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveLand"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Update"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateOperator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetLANDRegistry"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Migrated"): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface TransferEventObject {
  _from: string;
  _to: string;
  _tokenId: BigNumber;
}
export type TransferEvent = TypedEvent<
  [string, string, BigNumber],
  TransferEventObject
>;

export type TransferEventFilter = TypedEventFilter<TransferEvent>;

export interface ApprovalEventObject {
  _owner: string;
  _approved: string;
  _tokenId: BigNumber;
}
export type ApprovalEvent = TypedEvent<
  [string, string, BigNumber],
  ApprovalEventObject
>;

export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

export interface ApprovalForAllEventObject {
  _owner: string;
  _operator: string;
  _approved: boolean;
}
export type ApprovalForAllEvent = TypedEvent<
  [string, string, boolean],
  ApprovalForAllEventObject
>;

export type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;

export interface CreateEstateEventObject {
  _owner: string;
  _estateId: BigNumber;
  _data: string;
}
export type CreateEstateEvent = TypedEvent<
  [string, BigNumber, string],
  CreateEstateEventObject
>;

export type CreateEstateEventFilter = TypedEventFilter<CreateEstateEvent>;

export interface AddLandEventObject {
  _estateId: BigNumber;
  _landId: BigNumber;
}
export type AddLandEvent = TypedEvent<
  [BigNumber, BigNumber],
  AddLandEventObject
>;

export type AddLandEventFilter = TypedEventFilter<AddLandEvent>;

export interface RemoveLandEventObject {
  _estateId: BigNumber;
  _landId: BigNumber;
  _destinatary: string;
}
export type RemoveLandEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  RemoveLandEventObject
>;

export type RemoveLandEventFilter = TypedEventFilter<RemoveLandEvent>;

export interface UpdateEventObject {
  _assetId: BigNumber;
  _holder: string;
  _operator: string;
  _data: string;
}
export type UpdateEvent = TypedEvent<
  [BigNumber, string, string, string],
  UpdateEventObject
>;

export type UpdateEventFilter = TypedEventFilter<UpdateEvent>;

export interface UpdateOperatorEventObject {
  _estateId: BigNumber;
  _operator: string;
}
export type UpdateOperatorEvent = TypedEvent<
  [BigNumber, string],
  UpdateOperatorEventObject
>;

export type UpdateOperatorEventFilter = TypedEventFilter<UpdateOperatorEvent>;

export interface UpdateManagerEventObject {
  _owner: string;
  _operator: string;
  _caller: string;
  _approved: boolean;
}
export type UpdateManagerEvent = TypedEvent<
  [string, string, string, boolean],
  UpdateManagerEventObject
>;

export type UpdateManagerEventFilter = TypedEventFilter<UpdateManagerEvent>;

export interface SetLANDRegistryEventObject {
  _registry: string;
}
export type SetLANDRegistryEvent = TypedEvent<
  [string],
  SetLANDRegistryEventObject
>;

export type SetLANDRegistryEventFilter = TypedEventFilter<SetLANDRegistryEvent>;

export interface MigratedEventObject {
  contractName: string;
  migrationId: string;
}
export type MigratedEvent = TypedEvent<[string, string], MigratedEventObject>;

export type MigratedEventFilter = TypedEventFilter<MigratedEvent>;

export interface EstateRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EstateRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { result: string }>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    exists(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setLANDRegistry(
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ping(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    registry(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    mint(
      to: string,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  supportsInterface(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  name(overrides?: CallOverrides): Promise<string>;

  "initialize(string,string,address)"(
    _name: string,
    _symbol: string,
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize(string,string)"(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    _sender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateManager(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getApproved(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  approve(
    _to: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  landIdEstate(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  onERC721Received(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getFingerprint(
    estateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  setLandUpdateOperator(
    estateId: BigNumberish,
    landId: BigNumberish,
    operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferFrom(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateLandData(
    estateId: BigNumberish,
    landId: BigNumberish,
    data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tokenOfOwnerByIndex(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  estateLandIds(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setManyLandUpdateOperator(
    _estateId: BigNumberish,
    _landIds: BigNumberish[],
    _operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferManyLands(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    destinatary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateManyLandData(
    estateId: BigNumberish,
    landIds: BigNumberish[],
    data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  exists(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  tokenByIndex(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setLANDRegistry(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMetadata(
    estateId: BigNumberish,
    metadata: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ping(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ownerOf(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  isUpdateAuthorized(
    operator: string,
    estateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  setManyUpdateOperator(
    _estateIds: BigNumberish[],
    _operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferManyFrom(address,address,uint256[])"(
    from: string,
    to: string,
    estateIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferManyFrom(address,address,uint256[],bytes)"(
    from: string,
    to: string,
    estateIds: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  registry(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  verifyFingerprint(
    estateId: BigNumberish,
    fingerprint: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  symbol(overrides?: CallOverrides): Promise<string>;

  updateOperator(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  estateLandIndex(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setApprovalForAll(
    _to: string,
    _approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferLand(
    estateId: BigNumberish,
    landId: BigNumberish,
    destinatary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getMetadata(
    estateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  setUpdateOperator(
    estateId: BigNumberish,
    operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getLandEstateId(
    landId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  isMigrated(
    contractName: string,
    migrationId: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  tokenURI(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  mint(
    to: string,
    metadata: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isApprovedForAll(
    _owner: string,
    _operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setUpdateManager(
    _owner: string,
    _operator: string,
    _approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getEstateSize(
    estateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize()"(overrides?: CallOverrides): Promise<void>;

    "initialize(address)"(
      _sender: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: CallOverrides
    ): Promise<void>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    exists(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setLANDRegistry(
      _registry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ping(overrides?: CallOverrides): Promise<void>;

    ownerOf(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    registry(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    symbol(overrides?: CallOverrides): Promise<string>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    mint(
      to: string,
      metadata: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "Transfer(address,address,uint256)"(
      _from?: string | null,
      _to?: string | null,
      _tokenId?: BigNumberish | null
    ): TransferEventFilter;
    Transfer(
      _from?: string | null,
      _to?: string | null,
      _tokenId?: BigNumberish | null
    ): TransferEventFilter;

    "Approval(address,address,uint256)"(
      _owner?: string | null,
      _approved?: string | null,
      _tokenId?: BigNumberish | null
    ): ApprovalEventFilter;
    Approval(
      _owner?: string | null,
      _approved?: string | null,
      _tokenId?: BigNumberish | null
    ): ApprovalEventFilter;

    "ApprovalForAll(address,address,bool)"(
      _owner?: string | null,
      _operator?: string | null,
      _approved?: null
    ): ApprovalForAllEventFilter;
    ApprovalForAll(
      _owner?: string | null,
      _operator?: string | null,
      _approved?: null
    ): ApprovalForAllEventFilter;

    "CreateEstate(address,uint256,string)"(
      _owner?: string | null,
      _estateId?: BigNumberish | null,
      _data?: null
    ): CreateEstateEventFilter;
    CreateEstate(
      _owner?: string | null,
      _estateId?: BigNumberish | null,
      _data?: null
    ): CreateEstateEventFilter;

    "AddLand(uint256,uint256)"(
      _estateId?: BigNumberish | null,
      _landId?: BigNumberish | null
    ): AddLandEventFilter;
    AddLand(
      _estateId?: BigNumberish | null,
      _landId?: BigNumberish | null
    ): AddLandEventFilter;

    "RemoveLand(uint256,uint256,address)"(
      _estateId?: BigNumberish | null,
      _landId?: BigNumberish | null,
      _destinatary?: string | null
    ): RemoveLandEventFilter;
    RemoveLand(
      _estateId?: BigNumberish | null,
      _landId?: BigNumberish | null,
      _destinatary?: string | null
    ): RemoveLandEventFilter;

    "Update(uint256,address,address,string)"(
      _assetId?: BigNumberish | null,
      _holder?: string | null,
      _operator?: string | null,
      _data?: null
    ): UpdateEventFilter;
    Update(
      _assetId?: BigNumberish | null,
      _holder?: string | null,
      _operator?: string | null,
      _data?: null
    ): UpdateEventFilter;

    "UpdateOperator(uint256,address)"(
      _estateId?: BigNumberish | null,
      _operator?: string | null
    ): UpdateOperatorEventFilter;
    UpdateOperator(
      _estateId?: BigNumberish | null,
      _operator?: string | null
    ): UpdateOperatorEventFilter;

    "UpdateManager(address,address,address,bool)"(
      _owner?: string | null,
      _operator?: string | null,
      _caller?: string | null,
      _approved?: null
    ): UpdateManagerEventFilter;
    UpdateManager(
      _owner?: string | null,
      _operator?: string | null,
      _caller?: string | null,
      _approved?: null
    ): UpdateManagerEventFilter;

    "SetLANDRegistry(address)"(
      _registry?: string | null
    ): SetLANDRegistryEventFilter;
    SetLANDRegistry(_registry?: string | null): SetLANDRegistryEventFilter;

    "Migrated(string,string)"(
      contractName?: null,
      migrationId?: null
    ): MigratedEventFilter;
    Migrated(contractName?: null, migrationId?: null): MigratedEventFilter;
  };

  estimateGas: {
    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize(address)"(
      _sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    exists(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setLANDRegistry(
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ping(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    registry(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mint(
      to: string,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "initialize(string,string,address)"(
      _name: string,
      _symbol: string,
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(string,string)"(
      _name: string,
      _symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      _sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateManager(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    landIdEstate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getFingerprint(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setLandUpdateOperator(
      estateId: BigNumberish,
      landId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateLandData(
      estateId: BigNumberish,
      landId: BigNumberish,
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    estateLandIds(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setManyLandUpdateOperator(
      _estateId: BigNumberish,
      _landIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferManyLands(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateManyLandData(
      estateId: BigNumberish,
      landIds: BigNumberish[],
      data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    exists(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setLANDRegistry(
      _registry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMetadata(
      estateId: BigNumberish,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ping(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isUpdateAuthorized(
      operator: string,
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setManyUpdateOperator(
      _estateIds: BigNumberish[],
      _operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferManyFrom(address,address,uint256[])"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferManyFrom(address,address,uint256[],bytes)"(
      from: string,
      to: string,
      estateIds: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    verifyFingerprint(
      estateId: BigNumberish,
      fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    updateOperator(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    estateLandIndex(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      _to: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferLand(
      estateId: BigNumberish,
      landId: BigNumberish,
      destinatary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getMetadata(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setUpdateOperator(
      estateId: BigNumberish,
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getLandEstateId(
      landId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isMigrated(
      contractName: string,
      migrationId: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mint(
      to: string,
      metadata: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setUpdateManager(
      _owner: string,
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getEstateSize(
      estateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
